/*
abstract class passwordDetector{
    abstract boolean checkLength(String password);
    abstract boolean checkSpecialCharacter(String password);
    abstract boolean checkNumber(String password);
    abstract boolean checkUpperCase(String password);
    abstract boolean checkLowerCase(String password);
}
*/
class checker extends passwordDetector{
  // complete the class as mentioned in the problem statement
  int size;
  
  public checker(int s){
      this.size = s;
  }
  boolean checkLength(String password){
      if(password.length()>=size)
          return true;
     
     return false;
  }
  boolean checkSpecialCharacter(String password){
     boolean res = false;
     for(int i=0; i<password.length();i++){
         char c = password.charAt(i);
         
         if(c=='@'||c=='#'||c=='$'||c=='&'||c=='*'){
         res = true;
     }
  }
  return res;
  }
  boolean checkNumber(String password){
      boolean res = false;
     for(int i=0; i<password.length();i++){
         char c = password.charAt(i); 
         if(c=='0'||c=='1'||c=='2'||c=='3'||c=='4'||c=='5'||c=='6'||c=='7'||c=='8'||c=='9'){
  
         res = true;
     }
  }
  return res;
  }
  
  boolean checkLowerCase(String password){
      boolean res = false;
      for(int i=0; i<password.length();i++){
          char c = password.charAt(i);
          int asc = c;
          if(asc>=97 && asc<=122)
          res = true;
      }
      return res;
  }
  boolean checkUpperCase(String password){
      boolean res = false;
      for(int i=0; i<password.length();i++){
          char c = password.charAt(i);
          int asc = c;
          if(asc>=65 && asc<=90)
          res = true;
      }
      return res;
  }
}
