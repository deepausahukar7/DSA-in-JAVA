import java.util.*;
import java.io.*;
class Main{
    static class FastReader{
  
    BufferedReader br;
    StringTokenizer st;
    public FastReader()
    {
      br = new BufferedReader(new InputStreamReader(System.in));
    }
    String next()
    {
      while (st == null || !st.hasMoreElements()){
        try { st = new StringTokenizer(br.readLine()); }
        catch (IOException e) { e.printStackTrace(); }
      }
      return st.nextToken();
    }
    int nextInt() { return Integer.parseInt(next()); }
    long nextLong() { return Long.parseLong(next()); }
    double nextDouble(){ return Double.parseDouble(next()); }
    String nextLine(){
      String str = "";
      try { str = br.readLine(); }
      catch (IOException e) { e.printStackTrace(); }
      return str;
    }
  }
  
public static void fun(HashMap<Integer,Integer>map, int n){
    int half = (int)Math.floor(n/2);
    
    for(Map.Entry<Integer,Integer> el : map.entrySet()){
    
    if(el.getValue() > half){
        System.out.println(el.getKey());
        return;
    }
   
}

System.out.println(-1);
   
}

  public static void main(String[] args){
     FastReader sc = new FastReader();
     int t = sc.nextInt();
     
     while(t--!=0){

     int n = sc.nextInt();
 
     HashMap<Integer,Integer>map = new HashMap<>();
     
     for(int j=0;j<n;j++){
    
      int h = sc.nextInt();
     
     if(map.get(h)!=null){
         int k = map.get(h);
         k++;
         map.put(h,k);
         
     }   else{
         
         map.put(h,1);
        
     } 
   
 }
  fun(map,n);    
        
     }
     
  }
}