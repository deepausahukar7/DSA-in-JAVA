import java.io.*;
import java.util.*;
class Main{
    static class FastReader {
        BufferedReader br;
        StringTokenizer st;
        public FastReader()
        {
            br = new BufferedReader(
                new InputStreamReader(System.in));
        }
        String next()
        {
            while (st == null || !st.hasMoreElements()) {
                try {
                    st = new StringTokenizer(br.readLine());
                }
                catch (IOException e) {
                    e.printStackTrace();
                }
            }
            return st.nextToken();
        }
        int nextInt() { return Integer.parseInt(next()); }
        long nextLong() { return Long.parseLong(next()); }
        double nextDouble()
        {
            return Double.parseDouble(next());
        }
        String nextLine()
        {
            String str = "";
            try {
                if(st.hasMoreTokens()){
                    str = st.nextToken("\n");
                }
                else{
                    str = br.readLine();
                }
            }
            catch (IOException e) {
                e.printStackTrace();
            }
            return str;
        }
    }
    public static void main(String[] args){
        FastReader s = new FastReader();
    
            int n=s.nextInt();
      
            int[] arr=new int[n];
            
            for(int j=0;j<(n);j++){
                arr[j]=s.nextInt();
            }
            
            one(n,arr);
        
    }
    public static void one(int n,int[] arr){
          HashMap<Integer,Integer> map = new HashMap<>();
          int max = Integer.MIN_VALUE;
          int ans = 0;
          for(int i=0;i<n;i++){
              if(map.containsKey(arr[i])){
                  map.put(arr[i],map.get(arr[i])+1);
              }
              else{
                  map.put(arr[i],1);
              }
          }
         
          for (Map.Entry<Integer, Integer> entry : map.entrySet()){
        
            if(entry.getValue()>max){
                
            max = entry.getValue();
            
            ans = entry.getKey();
            }
           }
            
                     System.out.println(ans);
    }
}
